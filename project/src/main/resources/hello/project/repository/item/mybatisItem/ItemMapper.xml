<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hello.project.repository.item.mybatisItem.ItemMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into Product(category_id, title, image_name1, image_name2, explanation)
        values (#{categoryId}, #{title}, #{imageName1}, #{imageName2}, #{explanation})
    </insert>

    <insert id="saveOption" useGeneratedKeys="true" keyProperty="id">
        insert into ProductOption(item_id, name, price, quantity)
        values (#{itemId}, #{name}, #{price}, #{quantity})
    </insert>

    <select id="findById" resultType="hello.project.domain.item.item.Item">
        select id, category_id as categoryId, title, image_name1 as imageName1, image_name2 as imageName2, explanation, views
        from Product
        where id = #{id}
    </select>

    <select id="findOptionByItemId" resultType="hello.project.domain.item.itemOption.ItemOption">
        select id, item_id as itemId, name, price, quantity
        from ProductOption
        where item_id = #{itemId}
    </select>

    <select id="findOptionById" resultType="hello.project.domain.item.itemOption.ItemOption">
        select id, item_id as itemId, name, price, quantity
        from ProductOption
        where id = #{id}
    </select>

    <select id="findAll" resultType="hello.project.domain.item.item.Item">
        select id, category_id as categoryId, title, image_name1 as imageName1, image_name2 as imageName2, explanation, views
        from Product
        <where>
            <if test="itemName != null and itemName != ''">
                and title like concat('%','%',#{itemName},'%','%','%','%')
            </if>
        </where>
    </select>

    <update id="update">
        update Product
        set category_id=#{item.categoryId},
            title=#{item.title},
            image_name1=#{item.imageName1},
            image_name2=#{item.imageName2},
            explanation=#{item.explanation},
            views=#{item.views}
        where id = #{itemId}
    </update>

    <update id="updateOption">
        update ProductOption
        set name=#{itemOption.name},
            price=#{itemOption.price},
            quantity=#{itemOption.quantity}
        where id = #{itemOptionId}
    </update>

    <delete id="deleteItem">
        delete from Product
        where id = #{id}
    </delete>

    <delete id="deleteItemOption">
        delete from ProductOption
        where item_id = #{itemId}
    </delete>

    <delete id="deleteItemOptionId">
        delete from ProductOption
        where id = #{id}
    </delete>

    <select id="itemFindAll" resultType="hello.project.domain.item.item.ItemFindAll">
        select id as itemId,
               categoryId,
               categoryTitle,
               category,
               title,
               explanation,
               image_name1 as imageName1,
               image_name2 as imageName2
        from product_category_view
        <where>
            <if test="title != null and title != ''">
                or categoryTitle like concat('%','%',#{title},'%','%','%','%','%')
                or category like concat('%','%','%',#{title},'%','%','%','%')
                or title like concat('%','%','%','%',#{title},'%','%','%')
            </if>
        </where>
    </select>

    <select id="itemFindAllByCategoryId" resultType="hello.project.domain.item.item.ItemFindAll">
        select id as itemId,
        categoryId,
        categoryTitle,
        category,
        title,
        explanation,
        image_name1 as imageName1,
        image_name2 as imageName2
        from product_category_view
        where categoryId = ${categoryId}
    </select>

    <select id="findPrice" resultType="hello.project.domain.item.itemOption.ItemOption">
        select id,
        item_id as itemId,
        name,
        price,
        quantity
        from ProductOption
        where item_id = #{itemId}
    </select>


    <select id="sumViews" resultType="Integer">
        select sum(views)
        from Product
    </select>

</mapper>